<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace = "post">

	<!-- 지도 삭제하기 -->
	<delete id="deleteAllMap">
	delete from maps
	</delete>
	<!-- 지도 가져오기 -->
	<select id="getMap" parameterType="int" resultType="maps">
	SELECT * FROM MAPS WHERE POSTKEY = #{KEY} order by mapdetailseq asc, maplevel desc
	</select>
	<!-- 지도 첨부 -->
	<insert id="uploadMap" parameterType="map">
	INSERT ALL 
	<foreach item="item" index="index" collection="list">
	INTO
	MAPS VALUES(#{item.postkey}, #{item.lat}, #{item.lng}, #{item.mapoption}, #{item.mapseq},#{item.maplevel},#{item.maplat},#{item.maplng}, #{item.mapdetailseq})
	</foreach>
	SELECT * FROM DUAL
	</insert>
	
	
	<!-- 게시글 조회 -->
	<select id = "detailBoard" resultType = "post" parameterType = "map">
		SELECT PROFILEFILE, GROUPNICKNAME, POSTKEY, POSTTITLE, POSTCONTENT, POSTDATE, USERKEY, POSTREADCOUNT, GROUPKEY, POSTLIKE, REPLYCOUNT
		FROM GGROUPMEMBER JOIN (SELECT POSTKEY, POSTTITLE, POSTCONTENT, POSTDATE, USERKEY, POSTREADCOUNT, POSTLIKE, REPLYCOUNT
								FROM (	SELECT POSTKEY, POSTTITLE, POSTCONTENT, TO_CHAR(POSTDATE, 'YYYY-MM-DD') POSTDATE, USERKEY, POSTREADCOUNT, POSTLIKE
										FROM POST LEFT JOIN (	SELECT COUNT(POSTKEY) POSTLIKE, POSTKEY
																FROM POSTLIKE
																GROUP BY POSTKEY
																HAVING POSTKEY = #{postkey})			
								USING (POSTKEY)
								WHERE POSTKEY = #{postkey}) LEFT JOIN (	SELECT POSTKEY, COUNT(POSTKEY) REPLYCOUNT 
																		FROM GCOMMENT
																		GROUP BY POSTKEY
																		HAVING POSTKEY = #{postkey})		
								USING (POSTKEY))
		USING (USERKEY)
		WHERE GROUPKEY = #{groupkey}
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id = "updateReadCount">
		UPDATE POST
		SET POSTREADCOUNT = POSTREADCOUNT + 1
		WHERE POSTKEY = #{POSTKEY}
	</update>
	
	<!-- 게시글에 해당하는 댓글 리스트 -->
	<select id = "getBoardComment" resultType = "comment" parameterType = "map">
	<![CDATA[	
		SELECT * 
		FROM (	SELECT ROWNUM R, B.* 
				FROM (	SELECT C.COMMNETNUM, C.POSTKEY, C.USERKEY, COMMENTCONTENT, COMMEMTREREF, COMMENTRELEV, COMMENTRESEQ, COMMENTDATE, M.GROUPKEY, GROUPNICKNAME, PROFILEFILE, COMMENTSHOW
						FROM (	SELECT COMMNETNUM, POSTKEY, USERKEY, COMMENTCONTENT, COMMEMTREREF, COMMENTRELEV, COMMENTRESEQ, TO_CHAR(COMMENTDATE, 'YYYY-MM-DD') COMMENTDATE, GROUPKEY, COMMENTSHOW
								FROM GCOMMENT INNER JOIN (	SELECT POSTKEY 
															FROM POST 
															WHERE POSTKEY = #{postkey})
								USING (POSTKEY)
								ORDER BY COMMEMTREREF DESC, COMMENTRESEQ ASC
							  ) C,  
					  (	SELECT GROUPKEY, USERKEY, GROUPNICKNAME, PROFILEFILE
					  	FROM GGROUPMEMBER
					  	WHERE USERKEY IN (	SELECT USERKEY
											FROM GCOMMENT JOIN (SELECT POSTKEY 
																FROM POST 
																WHERE POSTKEY = #{postkey})
											USING (POSTKEY)) 
						AND GROUPKEY = #{groupkey}
						) M
				WHERE C.USERKEY = M.USERKEY AND C.POSTKEY = #{postkey}
				ORDER BY COMMEMTREREF ASC, COMMENTRESEQ ASC) B) 
	]]>
<!-- 		WHERE R >= #{START} AND R <= #{END} -->
	</select>
	
	<!-- 댓글수 -->
	<select id = "getCommentedCount" resultType = "int" parameterType = "map">
		SELECT COUNT(*)
		FROM GCOMMENT LEFT JOIN (SELECT POSTKEY, POSTTITLE, REPLYCOUNT, POSTREADCOUNT
								 FROM POST LEFT JOIN (SELECT POSTKEY, COUNT(POSTKEY) REPLYCOUNT
							 						  FROM GCOMMENT
							 						  GROUP BY POSTKEY)
							 	 USING (POSTKEY)) 
		USING(POSTKEY)					 						  
		WHERE USERKEY = #{userkey} AND GROUPKEY = #{groupkey}			
	</select>
	
	<select id = "getCommentCount" resultType = "int" parameterType = "map">
		SELECT COUNT(*)
		FROM GCOMMENT
		WHERE POSTKEY = #{postkey} AND GROUPKEY = #{groupkey}
	</select>
	
	<!-- 해당 모임에서 작성한 글 -->
	<select id = "wroteInGroup" resultType = "post" parameterType = "map">
	<![CDATA[	
		SELECT * FROM (	SELECT ROWNUM R, P.*
						FROM (	SELECT BOARDKEY, BOARDNAME, BOARDTYPE, POSTKEY, GROUPKEY, POSTTITLE, POSTREADCOUNT, POSTDATE
								FROM (SELECT BOARDKEY, BOARDNAME, BOARDTYPE 
									  FROM GGROUPBOARD) 
	 							JOIN 
	 								 (SELECT BOARDKEY, POSTKEY, GROUPKEY, POSTTITLE, POSTREADCOUNT, TO_CHAR(POSTDATE, 'YYYY-MM-DD') AS POSTDATE 
	 								  FROM POST
	 								  WHERE USERKEY = #{userkey} AND GROUPKEY = #{groupkey}
	  								 )
								USING (BOARDKEY)
								ORDER BY POSTDATE DESC) P
					  )
		WHERE R >= #{START} AND R <= #{END}			  
	]]>
	</select>
	
	<!-- 유저가 작성한 글의 개수 -->
	<select id = "getWroteCount" resultType = "int" parameterType = "map">
		SELECT COUNT(*)
		FROM POST
		WHERE USERKEY = #{userkey} AND GROUPKEY = #{groupkey}
		ORDER BY POSTDATE DESC
	</select>
	
	<!-- 유저가 댓글 단 글 -->
	<select id = "postByCommented" resultType = "post" parameterType = "map">
		SELECT * FROM (	SELECT ROWNUM R, C.*
						FROM (	SELECT BOARDKEY, BOARDTYPE, USERKEY, POSTKEY, COMMENTCONTENT, GROUPKEY, REPLYCOUNT, POSTTITLE, TO_CHAR(COMMENTDATE, 'YYYY-MM-DD') COMMENTDATE, POSTREADCOUNT, COMMENTSHOW 
								FROM GCOMMENT LEFT JOIN (SELECT BOARDKEY, BOARDTYPE, POSTKEY, POSTTITLE, REPLYCOUNT, POSTREADCOUNT
						 								 FROM GGROUPBOARD JOIN (SELECT BOARDKEY, POSTKEY, POSTTITLE, REPLYCOUNT, POSTREADCOUNT
																	 			FROM POST LEFT JOIN (SELECT POSTKEY, COUNT(POSTKEY) REPLYCOUNT
													 						  						FROM GCOMMENT
													 						  						GROUP BY POSTKEY)
													 	 						USING (POSTKEY)) 
														 USING (BOARDKEY))
								USING(POSTKEY)					 						  
						WHERE USERKEY = #{userkey} AND GROUPKEY = #{groupkey}
						<if test = "loginuser != userkey">
							AND COMMENTSHOW &lt;&gt; 1
						</if>
						ORDER BY COMMENTDATE DESC) C
					)
		<![CDATA[WHERE R >= #{START} AND R <= #{END}]]>
	</select>
	
	<!-- 좋아요 여부 -->
	<select id = "isLiked" resultType = "int" parameterType = "map">
		SELECT COUNT(*)
		FROM POSTLIKE
		WHERE USERKEY = #{userkey} AND GROUPKEY = #{groupkey} AND POSTKEY = #{postkey}
	</select>
	
	<!-- 좋아요 취소 -->
	<delete id = "revokeLike" parameterType = "map">
		DELETE 
		FROM POSTLIKE
		WHERE USERKEY = #{userkey} AND GROUPKEY = #{groupkey} AND POSTKEY = #{postkey}
	</delete>
	
	<!-- 좋아요 -->
	<insert id = "doLike" parameterType = "map">
		INSERT INTO POSTLIKE
		VALUES (#{postkey}, #{userkey}, #{groupkey})
	</insert>
	
	<!-- 글 좋아요 수 -->
	<select id = "likeCount" parameterType = "map" resultType = "int">
		SELECT COUNT(POSTKEY)
		FROM POSTLIKE
		WHERE GROUPKEY = #{groupkey} AND POSTKEY = #{postkey}
	</select>
	
	<!-- 내가 작성한 글의 개수 -->
	<select id = "getMyPostCount" parameterType = "int" resultType = "int">
		SELECT COUNT(*)
		FROM POST
		WHERE USERKEY = #{loginuser}
	</select>
	
	<!-- 내가 작성한 글 리스트 -->
	<select id = "getMyPost" parameterType = "map" resultType = "post">
	<![CDATA[	
		SELECT * FROM (	SELECT ROWNUM R, P.*
						FROM (	SELECT POSTKEY, GROUPKEY, POSTTITLE, POSTREADCOUNT, TO_CHAR(POSTDATE, 'YYYY-MM-DD') AS POSTDATE
								FROM POST
								WHERE USERKEY = #{loginuser}
								ORDER BY POSTDATE DESC) P
					  )
	]]>
<!-- 		WHERE R >= #{START} AND R <= #{END}	 -->
	</select>
</mapper>