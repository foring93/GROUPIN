<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace = "post">


	<!-- 지도 삭제하기 -->
	<delete id="deleteAllMap">
	delete from maps
	</delete>
	<!-- 지도 가져오기 -->
	<select id="getMap" parameterType="int" resultType="maps">
	SELECT * FROM MAPS WHERE POSTKEY = #{KEY}
	</select>
	<!-- 지도 첨부 -->
	<insert id="uploadMap" parameterType="map">
	INSERT ALL 
	<foreach item="item" index="index" collection="list">
	INTO
	MAPS VALUES(#{item.postkey}, #{item.lat}, #{item.lng}, #{item.mapoption}, #{item.mapseq},#{item.maplevel},#{item.maplat},#{item.maplng})
	</foreach>
	SELECT * FROM DUAL
	</insert>
	
	<!-- 게시글 조회 -->
	<select id = "detailBoard" resultType = "post" parameterType = "map">
		SELECT PROFILEFILE, GROUPNICKNAME, POSTKEY, POSTTITLE, POSTCONTENT, POSTDATE, USERKEY, POSTREADCOUNT, GROUPKEY, POSTLIKE, REPLYCOUNT
		FROM GGROUPMEMBER JOIN (SELECT POSTKEY, POSTTITLE, POSTCONTENT, POSTDATE, USERKEY, POSTREADCOUNT, POSTLIKE, REPLYCOUNT
								FROM (	SELECT POSTKEY, POSTTITLE, POSTCONTENT, TO_CHAR(POSTDATE, 'YYYY-MM-DD') POSTDATE, USERKEY, POSTREADCOUNT, POSTLIKE
										FROM POST LEFT JOIN (	SELECT COUNT(POSTKEY) POSTLIKE, POSTKEY
																FROM POSTLIKE
																GROUP BY POSTKEY
																HAVING POSTKEY = #{postkey})			
								USING (POSTKEY)
								WHERE POSTKEY = #{postkey}) LEFT JOIN (	SELECT POSTKEY, COUNT(POSTKEY) REPLYCOUNT 
																		FROM GCOMMENT
																		GROUP BY POSTKEY
																		HAVING POSTKEY = #{postkey})		
								USING (POSTKEY))
		USING (USERKEY)
		WHERE GROUPKEY = #{groupkey}
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id = "updateReadCount">
		UPDATE POST
		SET POSTREADCOUNT = POSTREADCOUNT + 1
		WHERE POSTKEY = #{POSTKEY}
	</update>
	
	<!-- 게시글에 해당하는 댓글 리스트 -->
	<select id = "getBoardComment" resultType = "comment" parameterType = "map">
		SELECT C.POSTKEY, C.USERKEY, COMMENTCONTENT, COMMEMTREREF, COMMENTRELEV, COMMENTRESEQ, COMMENTDATE, M.GROUPKEY, GROUPNICKNAME, PROFILEFILE
		FROM (	SELECT POSTKEY, USERKEY, COMMENTCONTENT, COMMEMTREREF, COMMENTRELEV, COMMENTRESEQ, COMMENTDATE, GROUPKEY
				FROM GCOMMENT INNER JOIN (	SELECT POSTKEY 
											FROM POST 
											WHERE POSTKEY = #{postkey})
				USING (POSTKEY)
			  ) C,  
			  (	SELECT GROUPKEY, USERKEY, GROUPNICKNAME, PROFILEFILE
			  	FROM GGROUPMEMBER
			  	WHERE USERKEY IN (	SELECT USERKEY
									FROM GCOMMENT JOIN (SELECT POSTKEY 
														FROM POST 
														WHERE POSTKEY = #{postkey})
									USING (POSTKEY)) 
				AND GROUPKEY = #{groupkey}
				) M
		WHERE C.USERKEY = M.USERKEY AND C.POSTKEY = #{postkey}
		ORDER BY COMMENTDATE
	</select>
	
	<!-- 해당 모임에서 작성한 글 -->
	<select id = "wroteInGroup" resultType = "post" parameterType = "map">
	<![CDATA[	
		SELECT * FROM (	SELECT ROWNUM R, P.*
						FROM (	SELECT POSTKEY, GROUPKEY, POSTTITLE, POSTREADCOUNT, TO_CHAR(POSTDATE, 'YYYY-MM-DD') AS POSTDATE
								FROM POST
								WHERE USERKEY = #{USERKEY} AND GROUPKEY = #{GROUPKEY}
								ORDER BY POSTDATE DESC) P
					  )
		WHERE R >= #{START} AND R <= #{END}	
	]]>
	</select>
	
	<select id = "getWroteCount" resultType = "int" parameterType = "map">
		SELECT COUNT(*)
		FROM POST
		WHERE USERKEY = #{USERKEY} AND GROUPKEY = #{GROUPKEY}
		ORDER BY POSTDATE DESC
	</select>
	
	<!-- 유저가 댓글 단 글 -->
	<select id = "postByCommented" resultType = "post" parameterType = "map">
	<![CDATA[	
		SELECT * FROM (	SELECT ROWNUM R, C.*
						FROM (	SELECT USERKEY, POSTKEY, COMMENTCONTENT, GROUPKEY, REPLYCOUNT, POSTTITLE, TO_CHAR(COMMENTDATE, 'YYYY-MM-DD') COMMENTDATE, POSTREADCOUNT 
								FROM GCOMMENT LEFT JOIN (SELECT POSTKEY, POSTTITLE, REPLYCOUNT, POSTREADCOUNT
														 FROM POST LEFT JOIN (SELECT POSTKEY, COUNT(POSTKEY) REPLYCOUNT
													 						  FROM GCOMMENT
													 						  GROUP BY POSTKEY)
													 	 USING (POSTKEY)) 
								USING(POSTKEY)					 						  
								WHERE USERKEY = #{USERKEY} AND GROUPKEY = #{GROUPKEY}
								ORDER BY COMMENTDATE DESC) C
					)
		WHERE R >= #{START} AND R <= #{END}
	]]>
	</select>
	
	<select id = "getCommentedCount" resultType = "int" parameterType = "map">
		SELECT COUNT(*)
		FROM GCOMMENT LEFT JOIN (SELECT POSTKEY, POSTTITLE, REPLYCOUNT, POSTREADCOUNT
								 FROM POST LEFT JOIN (SELECT POSTKEY, COUNT(POSTKEY) REPLYCOUNT
							 						  FROM GCOMMENT
							 						  GROUP BY POSTKEY)
							 	 USING (POSTKEY)) 
		USING(POSTKEY)					 						  
		WHERE USERKEY = #{userKey} AND GROUPKEY = #{groupKey}			
	</select>
</mapper>