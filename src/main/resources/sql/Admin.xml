<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Admin">



	<select id="getGroup" parameterType="int" resultType="group">
	select * from ggroup where groupkey = #{key}
	</select>
	
	
	<insert id="insert_deleteFile" parameterType="String">
	insert into delete_File values(#{before_file})
	</insert>
	
	<select id="selectDeletelist" resultType="String">
	select * from delete_File
	</select>
	
	<delete id="deleteList">
	delete from delete_File
	</delete>
	
	
	
<update id="stopCancelUsers">
update gusers set userstatuscode = null, userstatus = 0 
where userstatus = 3 and ROUND((sysdate-userstatuscode)*24*60) > 30
</update>

<delete id="deletePolice" parameterType="int">
delete from userpolice where reciveuserKey  = #{userkey}
</delete>


<select id="policeMDetail" parameterType="int" resultType="policeDetail">
  select distinct policeboardsort,policenumber,commentcontent postcontent
   from userpolice, gcomment 
   where reciveuserKey = 0 and policeboardsort = 'M' 
   and reciveuserKey = gcomment.userkey 
   and commnetnum in (policenumber)
    
</select>
<select id="policeBDetail" parameterType="int" resultType="policeDetail">
  select distinct policeboardsort, policenumber,postcontent 
  from userpolice,post 
  where reciveuserKey = #{userkey} and policeboardsort = 'B' 
  and reciveuserKey = post.userkey and postkey in (policenumber)
</select>

<update id="setUserStatus" parameterType="map">
update gusers set userstatus = #{status} where userid = #{id}
</update>

<update id="setUserStatusDate">
update gusers set userstatuscode = sysdate where userid = #{id}
</update>



<delete id="negativeGroup">
delete from ggroup where groupKey = #{groupKey}
</delete>
<update id="acceptGroup" parameterType="int">
	update ggroup set groupstatus = 0 where groupKey = #{groupKey}
</update>

	<select id="getAllGroupList" parameterType="group"
		resultType="group">
	   <![CDATA[ 
	 SELECT * FROM (
				SELECT b.*,
				( 

					SELECT dcategoryname || ':'  || SCATEGORYNAME categoryName
							
							FROM GCATEGORY2, GCATEGORY WHERE gcategory2.dcategorykey =
							gcategory.dcategorykey and scategorykey = b.categoryKey
					
					) categoryName,
					
					
					( 
					SELECT SWHERE ||' ' ||  DWHERE LocationName
									 FROM GLOCATION WHERE LOCATIONKEY = b.whereKey
					) LocationName,
									
									
					( 
					SELECT count(*)
									 FROM ggroupmember WHERE groupKey = b.groupKey
					) memberCount,
				
				
				 rownum rnum
				FROM (SELECT * from ggroup where groupstatus = #{type} order by groupdate desc) b)
				WHERE RNUM >= #{startrow} and rnum <= #{endrow}     
	]]>
	</select>

	<select id="getGroupListCount" parameterType="int"
		resultType="int">
		select count(*) from ggroup where groupstatus = #{type}
	</select>



	<delete id="deleteNotice" parameterType="map">
		delete from usermessage where mgkey in
		<foreach collection="key" open="(" close=")" separator=","
			item="item">
			#{item}
		</foreach>

	</delete>

	<select id="getNotice" parameterType="map"
		resultType="usermessage">
		  <![CDATA[ 
			  SELECT * FROM (
				SELECT b.*, rownum rnum
				FROM (SELECT * from usermessage order by mgDate desc) b)
				WHERE RNUM >= #{startrow} and rnum <= #{endrow}
					]]>
	</select>







	<select id="AdminPolice" resultType="policeResult">
		SELECT reciveuserkey
		userkey, (select userid from gusers where reciveuserkey
		= userkey)
		userid,count(*) count FROM USERPOLICE GROUP BY
		reciveuserkey order by
		count(*) desc
	</select>

	<select id="AdminSearchUser" parameterType="String"
		resultType="member">
		select * from gusers where userid like '%' || #{keyword} ||
		'%' and userkey > 0
	</select>


	<select id="admindeleteUser" parameterType="String"
		resultType="int">
		update gusers set USERSTATUS = 2, USERSTATUSCODE = sysdate
		where userid =
		#{id}
	</select>



	<select id="getAllUserList" parameterType="Map"
		resultType="member">
	  <![CDATA[ 
	  SELECT * FROM (
				SELECT b.*, rownum rnum
				FROM (SELECT USERKEY, USERID, USERPASSWORD, USERIMAGEFILE, 
				USERIMAGEORIGIN, USERAGE, 
				(SELECT SWHERE ||' ' ||  DWHERE LocationName
				 FROM GLOCATION WHERE LOCATIONKEY = USERLOCATION) LocationName,
				  GENDER, USEREMAIL, USERJOINDATE,useroptionadmin,
				   useroptiongroup, userstatus, 
                userstatuscode, logintype FROM GUSERS WHERE userstatus = #{type} and userkey > 0
				ORDER BY userjoindate ) b )
				WHERE RNUM >= #{startrow} and rnum <= #{endrow}
				]]>
	</select>

	<select id="getListCount" parameterType="int" resultType="int">
		select
		count(*) from gusers where userStatus = #{type} and userkey > 0
	</select>


	<select id="getStatisticsAge" resultType="statisticsAge">
		select agevalue age,
		count(*) value from gusers, gage where agekey = userage
		group by
		agevalue
	</select>
	
	<select id="getStatisticsGAge" resultType="statisticsAge">
		select agevalue age,
		count(*) value from ggroup, gage where ggroup.ageKey = gage.ageKey
		group by
		agevalue
		
	</select>

	<select id="getStatisticsLocation"
		resultType="statisticsLocation">
		select swhere location, count(userlocation) value from
		glocation,gusers
		where
		locationkey = userlocation group by swhere
	</select>
	
	<select id="statisticsgLocation" resultType="statisticsLocation">
		select swhere location, count(whereKey) value from
		glocation,ggroup
		where
		locationkey = whereKey group by swhere
	</select>


	<select id="getStatisticsJoinDate"
		resultType="statisticsJoinDate">
	  <![CDATA[ 
	  select rownum, joindate, value from (SELECT to_char(userjoindate,'mm-dd') joindate,
	count(*) value FROM GUSERS group by to_char(userjoindate,'mm-dd') 
	order by to_char(userjoindate,'mm-dd') DESC) 
	where rownum <= 7   
	]]>
	</select>

	<select id="getStatisticsCategory"
		resultType="statisticsCategory">
	 <![CDATA[ 
	select category, value from (select scategoryname category, count(scategoryname) 
	value from gcategory2,ggroup where CATEGORYKEY = SCATEGORYKEY 
	group by scategoryname order by count(scategoryname) desc) 
	where rownum <10
	]]>
	</select>
	
	<select id="statisticsUCategory" resultType="statisticsCategory">
	 <![CDATA[ 
	select category, value from (select scategoryname category, count(scategoryname) 
	value from gcategory2,gusercategory where CATEGORYKEY = SCATEGORYKEY 
	group by scategoryname order by count(scategoryname) desc) 
	where rownum <10
	]]>
	</select>






</mapper>
